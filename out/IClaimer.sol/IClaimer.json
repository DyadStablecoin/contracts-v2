{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "IdAlreadyInSet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "IdNotInSet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "fee",
          "type": "int256"
        }
      ],
      "name": "InvalidFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingPermissions",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "NotNFTOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyClaimers",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ClaimedAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "feeCollector",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimers",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimer.Config",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "ConfigSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Removed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "contains",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "feeCollector",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimers",
              "type": "uint256"
            }
          ],
          "internalType": "struct IClaimer.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "add(uint256)": "1003e2d2",
    "claimAll()": "d1058e59",
    "contains(uint256)": "c34052e0",
    "remove(uint256)": "4cc82215",
    "setConfig((int256,uint256,uint256))": "195ae98a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"IdAlreadyInSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"IdNotInSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"}],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingPermissions\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NotNFTOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyClaimers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ClaimedAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"feeCollector\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimers\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IClaimer.Config\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Removed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"feeCollector\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimers\",\"type\":\"uint256\"}],\"internalType\":\"struct IClaimer.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(uint256)\":{\"details\":\"Will revert:      - If it is not called by the owner of the dNFT      - If the dNFT is already in the set of Claimers      - If the max number of claimers is reached      - If the dNFT is missing the required permissionsEmits:      - Added(uint id)\",\"params\":{\"id\":\"The id of the dNFT to add\"}},\"claimAll()\":{\"details\":\"Emits:      - ClaimedAll()Note: The dNFT will be removed from the set of claimers if the `claim`      or `move` function reverts for it\"},\"contains(uint256)\":{\"params\":{\"id\":\"The id of the dNFT to check for\"},\"returns\":{\"_0\":\"True if the dNFT is in the set of Claimers, false otherwise\"}},\"remove(uint256)\":{\"details\":\"Will revert:      - If it is not called by the owner of the dNFT      - If the dNFT is not in the set of ClaimersEmits:      - Removed(uint id)\",\"params\":{\"id\":\"The id of the dNFT to remove\"}},\"setConfig((int256,uint256,uint256))\":{\"details\":\"Will revert:      - If it is not called by the owner      - If the new fee is higher than the max fee as specified by `MAX_FEE`Emits:      - ConfigSet(Config config)\",\"params\":{\"config\":\"The new config that will replace the current config\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"add(uint256)\":{\"notice\":\"Add dNFT to set of Claimers\"},\"claimAll()\":{\"notice\":\"Claim for all dNFTs in the Claimers set\"},\"contains(uint256)\":{\"notice\":\"Check if the dNFT id is in the set of Claimers\"},\"remove(uint256)\":{\"notice\":\"Remove dNFT from set of Claimers\"},\"setConfig((int256,uint256,uint256))\":{\"notice\":\"Set the config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IClaimer.sol\":\"IClaimer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/interfaces/IClaimer.sol\":{\"keccak256\":\"0x96b324a34f5f9b998d8ac2466710a3d683fb5009e610cd57979bd88655ea300a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a893dc3c63738015d8f5fa8878221d8cd2d9ba6be10659fcb0fcc7a4950a6ae0\",\"dweb:/ipfs/QmemhG4vmEZK6H7RtMbKRiSZtvfS7aKPjCqiJJBkJ4DVXL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "IdAlreadyInSet"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "IdNotInSet"
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "InvalidFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MissingPermissions"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotNFTOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyClaimers"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Added",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ClaimedAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimer.Config",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeCollector",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimers",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Removed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "add"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "contains",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimer.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeCollector",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimers",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setConfig"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "add(uint256)": {
            "details": "Will revert:      - If it is not called by the owner of the dNFT      - If the dNFT is already in the set of Claimers      - If the max number of claimers is reached      - If the dNFT is missing the required permissionsEmits:      - Added(uint id)",
            "params": {
              "id": "The id of the dNFT to add"
            }
          },
          "claimAll()": {
            "details": "Emits:      - ClaimedAll()Note: The dNFT will be removed from the set of claimers if the `claim`      or `move` function reverts for it"
          },
          "contains(uint256)": {
            "params": {
              "id": "The id of the dNFT to check for"
            },
            "returns": {
              "_0": "True if the dNFT is in the set of Claimers, false otherwise"
            }
          },
          "remove(uint256)": {
            "details": "Will revert:      - If it is not called by the owner of the dNFT      - If the dNFT is not in the set of ClaimersEmits:      - Removed(uint id)",
            "params": {
              "id": "The id of the dNFT to remove"
            }
          },
          "setConfig((int256,uint256,uint256))": {
            "details": "Will revert:      - If it is not called by the owner      - If the new fee is higher than the max fee as specified by `MAX_FEE`Emits:      - ConfigSet(Config config)",
            "params": {
              "config": "The new config that will replace the current config"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "add(uint256)": {
            "notice": "Add dNFT to set of Claimers"
          },
          "claimAll()": {
            "notice": "Claim for all dNFTs in the Claimers set"
          },
          "contains(uint256)": {
            "notice": "Check if the dNFT id is in the set of Claimers"
          },
          "remove(uint256)": {
            "notice": "Remove dNFT from set of Claimers"
          },
          "setConfig((int256,uint256,uint256))": {
            "notice": "Set the config"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IClaimer.sol": "IClaimer"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/IClaimer.sol": {
        "keccak256": "0x96b324a34f5f9b998d8ac2466710a3d683fb5009e610cd57979bd88655ea300a",
        "urls": [
          "bzz-raw://a893dc3c63738015d8f5fa8878221d8cd2d9ba6be10659fcb0fcc7a4950a6ae0",
          "dweb:/ipfs/QmemhG4vmEZK6H7RtMbKRiSZtvfS7aKPjCqiJJBkJ4DVXL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IClaimer.sol",
    "id": 34869,
    "exportedSymbols": {
      "IClaimer": [
        34868
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2243:44",
    "nodes": [
      {
        "id": 34794,
        "nodeType": "PragmaDirective",
        "src": "32:25:44",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 34868,
        "nodeType": "ContractDefinition",
        "src": "59:2215:44",
        "nodes": [
          {
            "id": 34801,
            "nodeType": "StructDefinition",
            "src": "83:224:44",
            "nodes": [],
            "canonicalName": "IClaimer.Config",
            "members": [
              {
                "constant": false,
                "id": 34796,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "108:3:44",
                "nodeType": "VariableDeclaration",
                "scope": 34801,
                "src": "103:8:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 34795,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "103:3:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34798,
                "mutability": "mutable",
                "name": "feeCollector",
                "nameLocation": "190:12:44",
                "nodeType": "VariableDeclaration",
                "scope": 34801,
                "src": "185:17:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 34797,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "185:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34800,
                "mutability": "mutable",
                "name": "maxClaimers",
                "nameLocation": "239:11:44",
                "nodeType": "VariableDeclaration",
                "scope": 34801,
                "src": "234:16:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 34799,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:4:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Config",
            "nameLocation": "90:6:44",
            "scope": 34868,
            "visibility": "public"
          },
          {
            "id": 34806,
            "nodeType": "EventDefinition",
            "src": "311:33:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "826f6d57ffc23208e9111faabc3b36f860a25b4557fbc1a88fea5dcbf3c3af6b",
            "name": "ConfigSet",
            "nameLocation": "317:9:44",
            "parameters": {
              "id": 34805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34804,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "335:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34806,
                  "src": "328:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$34801_memory_ptr",
                    "typeString": "struct IClaimer.Config"
                  },
                  "typeName": {
                    "id": 34803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34802,
                      "name": "Config",
                      "nameLocations": [
                        "328:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34801,
                      "src": "328:6:44"
                    },
                    "referencedDeclaration": 34801,
                    "src": "328:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$34801_storage_ptr",
                      "typeString": "struct IClaimer.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:16:44"
            }
          },
          {
            "id": 34810,
            "nodeType": "EventDefinition",
            "src": "347:34:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "64a55044d1f2eddebe1b90e8e2853e8e96931cefadbfa0b2ceb34bee36061941",
            "name": "Added",
            "nameLocation": "353:5:44",
            "parameters": {
              "id": 34809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34808,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "377:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34810,
                  "src": "364:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34807,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "363:17:44"
            }
          },
          {
            "id": 34814,
            "nodeType": "EventDefinition",
            "src": "384:34:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "fab782eee98387fe0d957b2964e6da22a6918f525952ccad107ae25db263cc11",
            "name": "Removed",
            "nameLocation": "390:7:44",
            "parameters": {
              "id": 34813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34812,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "414:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34814,
                  "src": "401:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34811,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "400:17:44"
            }
          },
          {
            "id": 34816,
            "nodeType": "EventDefinition",
            "src": "421:19:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "21747a3ae1713ff560d4ce92039c183894ac1acfa8867c8bfdaccddd7e6c9a58",
            "name": "ClaimedAll",
            "nameLocation": "427:10:44",
            "parameters": {
              "id": 34815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:2:44"
            }
          },
          {
            "id": 34820,
            "nodeType": "ErrorDefinition",
            "src": "444:34:44",
            "nodes": [],
            "errorSelector": "343790fc",
            "name": "InvalidFee",
            "nameLocation": "450:10:44",
            "parameters": {
              "id": 34819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34818,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "473:3:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34820,
                  "src": "469:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 34817,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:3:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "468:9:44"
            }
          },
          {
            "id": 34822,
            "nodeType": "ErrorDefinition",
            "src": "481:27:44",
            "nodes": [],
            "errorSelector": "c21c251e",
            "name": "TooManyClaimers",
            "nameLocation": "487:15:44",
            "parameters": {
              "id": 34821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:2:44"
            }
          },
          {
            "id": 34824,
            "nodeType": "ErrorDefinition",
            "src": "511:27:44",
            "nodes": [],
            "errorSelector": "caeb6c7b",
            "name": "MissingPermissions",
            "nameLocation": "517:18:44",
            "parameters": {
              "id": 34823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:44"
            }
          },
          {
            "id": 34828,
            "nodeType": "ErrorDefinition",
            "src": "541:34:44",
            "nodes": [],
            "errorSelector": "d64dfb01",
            "name": "NotNFTOwner",
            "nameLocation": "547:11:44",
            "parameters": {
              "id": 34827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34826,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "571:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34828,
                  "src": "566:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34825,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "565:9:44"
            }
          },
          {
            "id": 34832,
            "nodeType": "ErrorDefinition",
            "src": "578:34:44",
            "nodes": [],
            "errorSelector": "f503346b",
            "name": "IdAlreadyInSet",
            "nameLocation": "584:14:44",
            "parameters": {
              "id": 34831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34830,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "608:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34832,
                  "src": "603:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34829,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:9:44"
            }
          },
          {
            "id": 34836,
            "nodeType": "ErrorDefinition",
            "src": "615:34:44",
            "nodes": [],
            "errorSelector": "85896c67",
            "name": "IdNotInSet",
            "nameLocation": "621:10:44",
            "parameters": {
              "id": 34835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34834,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "645:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34836,
                  "src": "640:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34833,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:9:44"
            }
          },
          {
            "id": 34843,
            "nodeType": "FunctionDefinition",
            "src": "966:50:44",
            "nodes": [],
            "documentation": {
              "id": 34837,
              "nodeType": "StructuredDocumentation",
              "src": "653:310:44",
              "text": " @notice Set the config\n @dev Will revert:\n      - If it is not called by the owner\n      - If the new fee is higher than the max fee as specified by `MAX_FEE`\n @dev Emits:\n      - ConfigSet(Config config)\n @param config The new config that will replace the current config"
            },
            "functionSelector": "195ae98a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setConfig",
            "nameLocation": "975:9:44",
            "parameters": {
              "id": 34841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34840,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "999:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34843,
                  "src": "985:20:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$34801_memory_ptr",
                    "typeString": "struct IClaimer.Config"
                  },
                  "typeName": {
                    "id": 34839,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34838,
                      "name": "Config",
                      "nameLocations": [
                        "985:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34801,
                      "src": "985:6:44"
                    },
                    "referencedDeclaration": 34801,
                    "src": "985:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$34801_storage_ptr",
                      "typeString": "struct IClaimer.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "984:22:44"
            },
            "returnParameters": {
              "id": 34842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:44"
            },
            "scope": 34868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34849,
            "nodeType": "FunctionDefinition",
            "src": "1409:31:44",
            "nodes": [],
            "documentation": {
              "id": 34844,
              "nodeType": "StructuredDocumentation",
              "src": "1020:386:44",
              "text": " @notice Add dNFT to set of Claimers\n @dev Will revert:\n      - If it is not called by the owner of the dNFT\n      - If the dNFT is already in the set of Claimers\n      - If the max number of claimers is reached\n      - If the dNFT is missing the required permissions\n @dev Emits:\n      - Added(uint id)\n @param id The id of the dNFT to add"
            },
            "functionSelector": "1003e2d2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "1418:3:44",
            "parameters": {
              "id": 34847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34846,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1427:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34849,
                  "src": "1422:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34845,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:9:44"
            },
            "returnParameters": {
              "id": 34848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1439:0:44"
            },
            "scope": 34868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34855,
            "nodeType": "FunctionDefinition",
            "src": "1726:34:44",
            "nodes": [],
            "documentation": {
              "id": 34850,
              "nodeType": "StructuredDocumentation",
              "src": "1444:279:44",
              "text": " @notice Remove dNFT from set of Claimers\n @dev Will revert:\n      - If it is not called by the owner of the dNFT\n      - If the dNFT is not in the set of Claimers\n @dev Emits:\n      - Removed(uint id)\n @param id The id of the dNFT to remove"
            },
            "functionSelector": "4cc82215",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "1735:6:44",
            "parameters": {
              "id": 34853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34852,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1747:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34855,
                  "src": "1742:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34851,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1741:9:44"
            },
            "returnParameters": {
              "id": 34854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:0:44"
            },
            "scope": 34868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34859,
            "nodeType": "FunctionDefinition",
            "src": "1996:29:44",
            "nodes": [],
            "documentation": {
              "id": 34856,
              "nodeType": "StructuredDocumentation",
              "src": "1764:229:44",
              "text": " @notice Claim for all dNFTs in the Claimers set\n @dev Emits:\n      - ClaimedAll()\n @dev Note: The dNFT will be removed from the set of claimers if the `claim`\n      or `move` function reverts for it"
            },
            "functionSelector": "d1058e59",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimAll",
            "nameLocation": "2005:8:44",
            "parameters": {
              "id": 34857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2013:2:44"
            },
            "returnParameters": {
              "id": 34858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2024:0:44"
            },
            "scope": 34868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34867,
            "nodeType": "FunctionDefinition",
            "src": "2221:51:44",
            "nodes": [],
            "documentation": {
              "id": 34860,
              "nodeType": "StructuredDocumentation",
              "src": "2029:189:44",
              "text": " @notice Check if the dNFT id is in the set of Claimers\n @param id The id of the dNFT to check for\n @return True if the dNFT is in the set of Claimers, false otherwise"
            },
            "functionSelector": "c34052e0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contains",
            "nameLocation": "2230:8:44",
            "parameters": {
              "id": 34863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34862,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2244:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34867,
                  "src": "2239:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34861,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:9:44"
            },
            "returnParameters": {
              "id": 34866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34867,
                  "src": "2266:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2265:6:44"
            },
            "scope": 34868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IClaimer",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          34868
        ],
        "name": "IClaimer",
        "nameLocation": "69:8:44",
        "scope": 34869,
        "usedErrors": [
          34820,
          34822,
          34824,
          34828,
          34832,
          34836
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 44
}